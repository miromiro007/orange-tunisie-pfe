name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: docker.io/bbaouissi/projet_automatisation_reseau:latest

    - name: Start services
      run: docker-compose up -d --build

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if docker-compose exec db mysqladmin ping -uroot -p12345 --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 5
        done

    - name: Test MySQL Connection
      run: |
        docker-compose exec web python -c "
        import pymysql
        connection = None
        try:
            connection = pymysql.connect(
                host='db',
                port=3306,
                user='root',
                password='12345',
                database='projet_pfe',
                connect_timeout=5
            )
            print('✅ MySQL connection successful!')
            with connection.cursor() as cursor:
                cursor.execute('SHOW TABLES;')
                print(f'Tables found: {cursor.fetchall()}')
        except Exception as e:
            print(f'❌ MySQL connection failed: {e}')
            exit(1)
        finally:
            if connection:
                connection.close()
        "

    - name: Clean up
      if: always()
      run: docker-compose down -v
